[{"C:\\Users\\Shashi\\Desktop\\react-projects\\hook_crud_app\\src\\index.js":"1","C:\\Users\\Shashi\\Desktop\\react-projects\\hook_crud_app\\src\\App.js":"2","C:\\Users\\Shashi\\Desktop\\react-projects\\hook_crud_app\\src\\Components\\HeaderComponent\\Navbar.jsx":"3","C:\\Users\\Shashi\\Desktop\\react-projects\\hook_crud_app\\src\\Components\\EmployeeComponent\\AllEmployees.jsx":"4","C:\\Users\\Shashi\\Desktop\\react-projects\\hook_crud_app\\src\\Components\\EmployeeComponent\\Employee.jsx":"5","C:\\Users\\Shashi\\Desktop\\react-projects\\hook_crud_app\\src\\Components\\EmployeeComponent\\EditEmployee.jsx":"6","C:\\Users\\Shashi\\Desktop\\react-projects\\hook_crud_app\\src\\Components\\EmployeeComponent\\DeleteEmployee.jsx":"7","C:\\Users\\Shashi\\Desktop\\react-projects\\hook_crud_app\\src\\Components\\EmployeeComponent\\CreateEmployee.jsx":"8"},{"size":419,"mtime":1606564971004,"results":"9","hashOfConfig":"10"},{"size":1261,"mtime":1606570593608,"results":"11","hashOfConfig":"10"},{"size":1525,"mtime":1606484248155,"results":"12","hashOfConfig":"10"},{"size":1682,"mtime":1606485843748,"results":"13","hashOfConfig":"10"},{"size":1070,"mtime":1606572954073,"results":"14","hashOfConfig":"10"},{"size":4177,"mtime":1606572139231,"results":"15","hashOfConfig":"10"},{"size":1273,"mtime":1606571617778,"results":"16","hashOfConfig":"10"},{"size":3701,"mtime":1606567630752,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4jeuvx",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\Shashi\\Desktop\\react-projects\\hook_crud_app\\src\\index.js",[],"C:\\Users\\Shashi\\Desktop\\react-projects\\hook_crud_app\\src\\App.js",[],"C:\\Users\\Shashi\\Desktop\\react-projects\\hook_crud_app\\src\\Components\\HeaderComponent\\Navbar.jsx",[],["38","39"],"C:\\Users\\Shashi\\Desktop\\react-projects\\hook_crud_app\\src\\Components\\EmployeeComponent\\AllEmployees.jsx",["40"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nconst AllEmployees = () => {\r\n  let [Employees, setEmployees] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/employees\")\r\n      .then(emp => {\r\n        console.log(emp.data);\r\n        setEmployees(emp.data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, [Employees]);\r\n\r\n  let employeeRendered = Employees.map(emp => (\r\n    <tr key={emp.id}>\r\n      <td>{emp.id}</td>\r\n      <td>{emp.emp_name}</td>\r\n      <td>{emp.emp_email}</td>\r\n      <td>{emp.emp_designation}</td>\r\n      <td>{emp.emp_location}</td>\r\n      <td>{emp.emp_address}</td>\r\n      <td>\r\n        <div className=\"btn-group\">\r\n          <Link className=\"btn btn-dark btn-sm\" to={`/edit-emp/${emp.id}`}>\r\n            edit\r\n          </Link>\r\n          <Link\r\n            className=\"btn btn-success btn-sm\"\r\n            to={`/emp-details/${emp.id}`}\r\n          >\r\n            details\r\n          </Link>\r\n          <Link className=\"btn btn-danger btn-sm\" to={`/delete-emp/${emp.id}`}>\r\n            remove\r\n          </Link>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  ));\r\n  return (\r\n    <div>\r\n      <table className=\"table table-bordered\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Name</th>\r\n            <th>Emil</th>\r\n            <th>designation</th>\r\n            <th>location</th>\r\n            <th>address</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{employeeRendered}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllEmployees;\r\n","C:\\Users\\Shashi\\Desktop\\react-projects\\hook_crud_app\\src\\Components\\EmployeeComponent\\Employee.jsx",[],"C:\\Users\\Shashi\\Desktop\\react-projects\\hook_crud_app\\src\\Components\\EmployeeComponent\\EditEmployee.jsx",["41"],"import React, { useState, useEffect } from \"react\";\r\nimport { withRouter, Link, useParams } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst EditEmployee = ({ history }) => {\r\n  let { id } = useParams();\r\n  let [employee, setEmployee] = useState({\r\n    emp_name: \"\",\r\n    emp_email: \"\",\r\n    emp_designation: \"\",\r\n    emp_location: \"\",\r\n    emp_address: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:5000/employees/${id}`)\r\n      .then(result => {\r\n        console.log(result);\r\n        setEmployee({\r\n          id: result.data.id,\r\n          emp_name: result.data.emp_name,\r\n          emp_email: result.data.emp_email,\r\n          emp_designation: result.data.emp_designation,\r\n          emp_location: result.data.emp_location,\r\n          emp_address: result.data.emp_address,\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n    return () => {};\r\n  }, [id]);\r\n\r\n  let handleChange = e => {\r\n    setEmployee({ ...employee, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  let handleSubmit = e => {\r\n    e.preventDefault();\r\n    try {\r\n      axios\r\n        .put(`http://localhost:5000/employees/${id}`, employee)\r\n        .then(_ => {\r\n          history.push(\"/all-emp\");\r\n        })\r\n        .catch(err => console.log(err));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  let {\r\n    emp_name,\r\n    emp_email,\r\n    emp_designation,\r\n    emp_location,\r\n    emp_address,\r\n  } = employee;\r\n  return (\r\n    <div>\r\n      <section className=\"card my-4\">\r\n        <article className=\"card-body\">\r\n          <h3 className=\"display-6 font-weight-bold text-uppercase text-success border-bottom pb-2 mb-2\">\r\n            Update Employee\r\n          </h3>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-3\">\r\n                <label htmlFor=\"name\">Employee name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"emp_name\"\r\n                  value={emp_name}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <label htmlFor=\"emp_email\">Employee Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  name=\"emp_email\"\r\n                  value={emp_email}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <label htmlFor=\"emp_designation\">Employee designation</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"emp_designation\"\r\n                  value={emp_designation}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <label htmlFor=\"emp_location\">Employee Location</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"emp_location\"\r\n                  value={emp_location}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <label htmlFor=\"emp_address\">Employee Address</label>\r\n                <textarea\r\n                  name=\"emp_address\"\r\n                  id=\"emp_address\"\r\n                  cols=\"30\"\r\n                  rows=\"10\"\r\n                  value={emp_address}\r\n                  onChange={handleChange}\r\n                  className=\"form-control\"\r\n                ></textarea>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <button className=\"btn btn-success my-2\">\r\n                  Update Employee\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </article>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(EditEmployee);\r\n","C:\\Users\\Shashi\\Desktop\\react-projects\\hook_crud_app\\src\\Components\\EmployeeComponent\\DeleteEmployee.jsx",[],"C:\\Users\\Shashi\\Desktop\\react-projects\\hook_crud_app\\src\\Components\\EmployeeComponent\\CreateEmployee.jsx",[],["42","43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":38,"nodeType":"50","messageId":"51","endLine":1,"endColumn":46},{"ruleId":"48","severity":1,"message":"52","line":2,"column":22,"nodeType":"50","messageId":"51","endLine":2,"endColumn":26},{"ruleId":"44","replacedBy":"53"},{"ruleId":"46","replacedBy":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.",["55"],["56"],"no-global-assign","no-unsafe-negation"]